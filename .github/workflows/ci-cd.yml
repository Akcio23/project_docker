name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do reposit칩rio
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Build frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  sonar-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Acesso SSH para an치lise SonarQube no servidor remoto
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Parar e remover SonarQube antigo se houver
            docker stop sonar || true
            docker rm sonar || true

            # Subir container SonarQube local
            docker run -d --name sonar -p 8198:9000 sonarqube:community

            # Esperar SonarQube iniciar (pode demorar ~30s)
            echo "Aguardando SonarQube iniciar..."
            sleep 40

            # Fazer an치lise com SonarScanner
            mkdir -p ~/app/sonar && cd ~/app/sonar
            curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
            unzip sonar-scanner.zip && mv sonar-scanner-* sonar-scanner

            git clone https://github.com/${{ github.repository }} app
            cd app

            ./../sonar-scanner/bin/sonar-scanner \
              -Dsonar.projectKey=app \
              -Dsonar.sources=. \
              -Dsonar.host.url=http://localhost:9000 \
              -Dsonar.login=admin \
              -Dsonar.password=admin || exit 1

            # Parar e remover o container SonarQube
            docker stop sonar
            docker rm sonar

  deploy:
    needs: sonar-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do reposit칩rio
        uses: actions/checkout@v3

      - name: Copiar docker-compose.yml para o servidor remoto
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./docker-compose.yml"
          target: "~/app"
          strip_components: 0

      - name: Deploy usando docker-compose no servidor remoto
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            docker compose down --remove-orphans || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            docker compose up -d --build
